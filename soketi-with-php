FROM composer AS deps

WORKDIR /app

COPY . .

RUN --mount=type=bind,source=composer.json,target=composer.json \
    --mount=type=bind,source=composer.lock,target=composer.lock \
    --mount=type=cache,target=/tmp/cache \
    composer install --no-dev --no-interaction 

################################################################################
FROM node:18 AS node_deps

WORKDIR /app

RUN apt update && apt install -y git python3 gcc build-essential

################################################################################
FROM php:8.3-apache AS final

ENV APACHE_DOCUMENT_ROOT=/var/www/html/public

COPY .docker/000-default.conf /etc/apache2/sites-available/000-default.conf

RUN a2enmod rewrite
RUN service apache2 restart

# Add core PHP extensions, see
# https://github.com/docker-library/docs/tree/master/php#php-core-extensions
# This example adds the apt packages for the 'gd' extension's dependencies and then
# installs the 'gd' extension. For additional tips on running apt-get, see
# https://docs.docker.com/go/dockerfile-aptget-best-practices/
RUN apt-get update && apt-get install -y \
      git \
      vim \
      supervisor \
      libfreetype-dev \
      libjpeg62-turbo-dev \
      libpng-dev \
      libpq-dev \
      && rm -rf /var/lib/apt/lists/* \
      && docker-php-ext-configure gd --with-freetype --with-jpeg \
      && docker-php-ext-install gd pdo pdo_pgsql pgsql

RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"

RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf
RUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

COPY --from=deps app/vendor /var/www/html/vendor
COPY --from=node_deps /usr/local /usr/local

COPY node_modules/@soketi /usr/local/lib/node_modules/@soketi
COPY node_modules/pusher /usr/local/lib/node_modules/pusher
COPY node_modules/tweetnacl /usr/local/lib/node_modules/tweetnacl
COPY node_modules/tweetnacl /usr/local/lib/node_modules/tweetnacl-util
COPY node_modules/tweetnacl /usr/local/lib/node_modules/node-fetch
COPY node_modules/tweetnacl /usr/local/lib/node_modules/abort-controller

COPY .docker/soketi.conf /etc/supervisor/conf.d/soketi.conf

RUN ln -s ../lib/node_modules/@soketi/soketi/bin/server.js /usr/local/bin/soketi
RUN ln -s ../lib/node_modules/@soketi/soketi/bin/pm2.js /usr/local/bin/soketi-pm2

RUN chown www-data:www-data /usr/local/bin /usr/local/lib/node_modules

# Copy the app files from the app directory.
COPY . /var/www/html

COPY .env.production /var/www/html/.env

RUN php artisan storage:link && php artisan optimize:clear

RUN chown -R www-data:www-data /var/www/html
